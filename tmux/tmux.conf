# prefix + I to install new plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'fcsonline/tmux-thumbs'

# Theme
set -g @plugin 'dracula/tmux'
set -g @dracula-plugins "cpu-usage gpu-usage ram-usage"
set -g @dracula-show-powerline true

# Set zsh as shell
set -g default-command /bin/zsh

# Thoughtbot tutorial
# :::::::::::::::::::
# Following this tutorial: https://thoughtbot.com/upcase/tmux
# Current episode: https://thoughtbot.com/upcase/videos/tmux-vim-integration

##################################
### TMUX THUMBS ###
##################################
# Spep 1: Copy from listing:
# `C-s` + `Space` show lines with letters. Choose what you want.
# Step 2: Paste
# `C-s` + `]` to paste from tmux clipboard into Vim

##################################
### SCROLL ###
##################################
# - On a tmux terminal do: `C-[` to put tmux on scroll mode
# - If in iTerm2:
#   Go to iTerm settings -> "Advanced" -> "Scroll wheel sends arrow keys when in alternate screen mode" -> set to "yes".
# - Movements
# On scroll mode `C-[` these are the movements:
# UP:
# 1. Page Up: `C-u`
# 2. Scroll Up: `C-y`
#
# DOWN:
# 1. Page Down: `C-f`
# 1. Scroll Down: `C-e`
set -g mouse on

######################
### NOTES ############
######################
# - <leader> is `Ctrl+s`
# - A session can have multiple windows. And a window can have multiple panes
# - Move to last visited window is is: `C-s l`
# - Move to last visited session is is: `C-s L` (I don't use multiple sessions for now)
# - Move a window to the left or right is: Ctrl + Shift + Left/Right
# - Zoom mode: Only one pane visible: `C-s z` and back to all panes visible the same: `C-s z`
# - On iTerm I have remapped `Caps lock` to Ctrl. So is the same
# - To resize Up/Down/Left/Right current pane to Shift `S-Left`, `S-Right`,.... Helpful to give more space
# - Navigate between sessions, windows and panes: <leader>w
# - To run commands on tmux is: `<leader>:`
# - Detach a session: `<leader> d`
# - To kill a tmux session run a tmux command as explained above and write `kill-session`


######################
### OVERRIDE LEADER ##
######################
unbind C-b
set -g prefix C-s

##########################
### UPDATE TMUX CONFIG ###
##########################
# ::::::::::::::::::
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

##########################
### PANE NAVIGATION ######
##########################
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|nvim|vim?x?)(diff)?|fzf)$'"
bind -n 'C-h' if-shell "$not_tmux" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$not_tmux" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$not_tmux" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$not_tmux" 'send-keys C-l'  'select-pane -R'

##########################
### PANE SPLITS ##########
##########################
bind - split-window -v -c '#{pane_current_path}'
bind '\' split-window -h -c '#{pane_current_path}'
bind x kill-pane # Do not ask for confirmation when closing a pane

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5

######################
### WINDOWS ##########
######################
# Windows
bind c new-window -c '#{pane_current_path}'
bind-key & kill-window # Do not ask for confirmation when closing a window
set-option -g base-index 1
set-option -g renumber-windows on
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

##################################
### SCREEN COLOR  ###
##################################
set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
set -as terminal-features ",xterm-256color:RGB"

##################################
### TMUX THUMBS #######################
##################################
set -g @thumbs-unique '1'
set -g @thumbs-reverse '1'
set -g @thumbs-regexp-1 '[a-z]+@[a-z]+.[a-z]+' # Match emails
set -g @thumbs-regexp-2 '[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:' # Match MAC addresses
set -g @thumbs-regexp-3 '\-\-[a-zA-Z0-9_]+' # options
set -g @thumbs-hint-fg-color 'red'

##################################
### NEO VIM CONFIGS
### If you executes `:checkhealth` in Neovim it says
### you to set these options
##################################
set-option -sg escape-time 10
set-option -g focus-events on

##################################
### COPY FROM TMUX TO CLIPBOAR ###
##################################
# ::::::::::::::::::::::::::::::::
# How it works?
# - Navigate up/down the text in terminal
# - Whe you are in the text use Vim visual mode by presing `v` and select text.
# - The press `y` to copy the text to Mac OS X clipboard
# - After that you can use elsewhere
# Use vim keybindings in copy mode
setw -g mode-keys vi
# brew install reattach-to-user-namespace (needed on Mac OS X)
# Setup 'v' to begin selection as in Vim
#bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
#bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
# Update default binding of `Enter` to also use copy-pipe
#unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

##################################
### INIT PLUGIN MANAGER ##########
##################################
run '~/.tmux/plugins/tpm/tpm'
