# Global aliases

alias ls="ls --color=always"
alias ll="ls -lA --color=always"
alias grep="grep --color=always"
alias egrep="egrep --color=always"

# NeoVim
alias neo="nvim"

# Vim alias
if [ -h '/opt/homebrew/bin/vim' ]; then
  alias vim='/opt/homebrew/bin/vim'
fi

# Git
alias gp="git pull"
alias gps="git push"
alias gs="git status"
alias ga="git add"
alias gd="git diff"
alias gw="git wip"

# Docker compose
alias doc="docker-compose exec backend"
alias guard="docker compose exec backend bin/guard"
alias dot="docker-compose exec backend -f ./docker-compose.test.yml bundle exec rspec"
alias dor="docker-compose run backend"
alias dspec="doc bundle exec rspec"
alias dof="docker-compose exec frontend"
alias dkillAll='docker kill $(docker ps -q)'

# Laravel
alias sail='[ -f sail ] && sh sail || sh vendor/bin/sail'

# Network
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ipl="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"


fixssh() {
  for key in SSH_AUTH_SOCK SSH_CONNECTION SSH_CLIENT; do
    if (tmux show-environment | grep "^${key}" > /dev/null); then
      value=`tmux show-environment | grep "^${key}" | sed -e "s/^[A-Z_]*=//"`
      export ${key}="${value}"
    fi
  done
}

# Docker Volume list
# ::::::::::::::::::::::::

# Mount a new small container for inspecting Docker volumes
# Because content of Docker volumes are not in your machine are inside
# Docker's host VM

# Found here
# https://www.freshblurbs.com/blog/2017/04/16/inspect-docker-volumes-on-mac.html

# How to use it:
# First your run:
# docker volume ls
# Then you pick the volume you want to inspect
# docker_inspect_volume YOUR_VOLUME
docker_inspect_volume () {
  DOCKER_VOLUME_OUTPUT=$(docker volume inspect $1);
  DOCKER_VOLUME_OUTPUT=$(echo "$DOCKER_VOLUME_OUTPUT" | grep -E '"Mountpoint": "[^,]*')
  DOCKER_VOLUME_OUTPUT=$(echo "$DOCKER_VOLUME_OUTPUT" | sed -r 's/("Mountpoint"\: ")(.*)(",)/\/docker\2/')
  docker run --rm -it -w $DOCKER_VOLUME_OUTPUT -v /:/docker alpine:edge
}
